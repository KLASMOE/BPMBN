% script: mixednetscript(nodes)
%
% load a mixed discrete and continuous network:
% loadmixed(filename)
%
% testing file for hybrid bayesian networks
%
% Copyright Michael McGeachie, 2010.  All rights reserved.

%close all; clear all;
fprintf(1,'\n\n======  Test Bayes Net Inference =====\n\n');
addpath('../../inference_MikeMcGeachie/');
addpath('../../netlearning_HsunHsien/');
addpath('../../auctools/');

% load a network of Cowell's Figure 2 and figure 4.  
% It loads a network called 'cowell' and another called 'cfig4'
run('mnetscripts');

priorPrecision.nu = 1;
priorPrecision.sigma2 = 1;
priorPrecision.alpha = 10;
priorPrecision.freq = 2;

nodesketch = cowell;
DoTestNetworkEval(nodesketch, 'cowell.txt', 'A', priorPrecision, 'Cowell''s Figure 2');

nodesketch = cfig4;
DoTestNetworkEval(nodesketch, 'cfig4.txt', 'A', priorPrecision, 'Cowell''s Figure 4');

% test learning a BN and it's prediction on WINE.
MBNet = LearnStructure('winedata.txt', 'class', priorPrecision, 'winetest-net');
DoTestNetworkEval(MBNet, 'winedata.txt', 'class', priorPrecision, ...
    'UCI Machine Learning Repository: WINE', false, false);

% test inference on a fully discrete bayes net
% also test the input/output to BayesWare Discoverer
[acc,p] = BWDHybridInference('chess-kr-vs-kp.bdn', 'chess-kr-vs-kp.txt', 'class');

% now learn the chess example using LearnStructure:
MBNet = LearnStructure('chess-kr-vs-kp.txt','class',priorPrecision, 'chess-net');
DoTestNetworkEval(MBNet, 'chess-kr-vs-kp.txt', 'class', priorPrecision, ...
    'chess: Rook vs Pawn', true, false);

